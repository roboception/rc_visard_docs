.. include:: global_rst.glb

Universal Robots pose format
----------------------------

The pose format that is used by Universal Robots consists of a position
:math:`XYZ` in millimeters and an orientation in angle-axis format with angle
:math:`\theta` in radians as length of the rotation axis :math:`U`.

.. math::
   V = \left(\begin{array}{c}\theta u_x \\ \theta u_y \\ \theta u_z\end{array}\right)

This is called a rotation vector.

Conversion from angle-axis format to quaternion
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The conversion from a rotation vector :math:`V` to a quaternion
:math:`q=(\begin{array}{cccc}x & y & z & w\end{array})^T` can be done as
follows.

We first recover the angle :math:`\theta` in radians from the rotation vector
:math:`V` by

.. math::
   \theta = \sqrt{v_x^2 + v_y^2 + v_z^2}\text{.}

If :math:`\theta = 0`, then the quaternion is :math:`q=(\begin{array}{cccc}0 & 0 & 0 & 1\end{array})^T`,
otherwise it is

.. math::
   x = v_x \frac{\sin(\theta/2)}{\theta}\text{,} \\
   y = v_y \frac{\sin(\theta/2)}{\theta}\text{,} \\
   z = v_z \frac{\sin(\theta/2)}{\theta}\text{,} \\
   w = \cos(\theta/2)\text{.}

Conversion from quaternion to angle-axis format
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The conversion from a quaternion :math:`q=(\begin{array}{cccc}x & y & z &
w\end{array})^T` with :math:`||q||=1` to a rotation vector in angle-axis form
can be done as follows.

We first recover the angle :math:`\theta` in radians from the quaternion by

.. math::
   \theta = 2*\text{acos}(w)\text{.}

If :math:`\theta = 0`, then the rotation vector :math:`V=(\begin{array}{ccc}0 & 0 & 0\end{array})^T`, 
otherwise it is

.. math::
   v_x = \theta \frac{x}{\sqrt{1-w^2}}\text{,} \\
   v_y = \theta \frac{y}{\sqrt{1-w^2}}\text{,} \\
   v_z = \theta \frac{z}{\sqrt{1-w^2}}\text{.}

