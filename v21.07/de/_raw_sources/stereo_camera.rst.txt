
.. include:: global_rst.glb

.. _sect-stereo-camera:

Stereo camera
=============

The stereo camera module is a base module which is available on every |rc_xxx| and
contains functionality for acquiring stereo
image pairs and performing planar rectification needed to use the stereo
camera as a measurement device.

Image acquisition
-----------------

.. index::
   single: exposure
   single: gain
   single: timestamp

Acquiring stereo image pairs is the first step toward stereo vision. Since
both cameras are equipped with global shutters and their chips are
hardware-synchronized, all pixels of both camera images are always exposed at
exactly the same time. The time at the middle of the image exposure is attached to the images as a timestamp.
This timestamp becomes important for dynamic applications in which the cameras or the scene moves.

.. only:: rc_visard

   .. Note:: The period during which the shutter is open is signaled via the |rc_visard|'s
      :ref:`GPIO out 1<sect-wiring>`:latex:`\:(Section \ref{hardware_spec:sect-wiring})`.

Exposure time can be set manually to a fixed value. This is useful in an environment
where lighting is controlled so that it is always at the same intensity. The
camera is set to auto exposure by default. In this mode,
the exposure time is chosen automatically, up to a user
defined maximum. The permitted maximum is meant to limit the motion blur that occurs when taking images
while the camera or the scene is moving. The maximum exposure time thus depends on the
application. If the maximum exposure time is reached, the auto-exposure algorithm uses the gain to
increase image brightness. However, larger gain factors also amplify image noise. Thus, the
maximum exposure time trades motion blur off against image noise under weak-light conditions.

.. _sect-stereo-camera-rectification:

Planar rectification
--------------------

.. index::
   single: rectification
   single: camera model
   single: stereo camera
   single: calibration; rectification
   single: focal length
   single: baseline
   single: disparity

Camera parameters such as focal length,
lens distortion, and the relationship of the cameras to each other must be exactly known
to use the stereo camera as a measuring instrument. The |rc_visard| is already calibrated at
production time and normally requires no recalibration. The camera parameters describe with great precision all
of the stereo-camera system's geometric properties, but the resulting model is
complex and difficult to use.

Rectification is the process of remapping the images according to an ideal stereo-camera model.
Lens distortion is removed and the images are aligned so that an object point is always projected
onto the same image row in both images. The cameras' optical axes become exactly parallel.
This means that points at infinite distance are projected
onto the same image column in both images. The
closer an object point is, the larger is the difference between its image columns in the right and
left images. This difference is called disparity.

Mathematically, the object point :math:`P=(P_x, P_y, P_z)` is projected onto image point
:math:`p_l=(p_{lx}, p_{ly}, 1)` in the left rectified image and onto :math:`p_r=(p_{rx}, p_{ry}, 1)`
in the right rectified image by

.. math::
   A &= \left(\begin{array}{ccc} f & 0 & \frac{w}{2}\\
                           0 & f & \frac{h}{2}\\
                           0 & 0 & 1
   \end{array}\right), \qquad
   T_s = \left(\begin{array}{c}t\\
                           0\\
                           0
   \end{array}\right),

   s_1 p_l &= AP, \\
   s_2 p_r &= A(P-T_s).

The focal length :math:`f` is the distance between the common image plane and
the optical centers of the left and right cameras. It is measured in pixels. The
baseline :math:`t` is the distance between the optical centers of the two cameras.
The image width :math:`w` and height :math:`h` are measured in pixels, too. :math:`s_1`
and :math:`s_2` are scale factors ensuring that the third coordinates of the image points
:math:`p_l` and :math:`p_r` are equal to 1.

.. note::  The |rc_xxx| reports a focal length factor via its various
      interfaces. It relates to the image width
      for supporting different image resolutions. The focal length :math:`f`
      in pixels can be easily obtained by multiplying the focal length factor
      by the image width in pixels.

.. _sect-cam-accessing-images:

Viewing and downloading images
------------------------------

.. index::
   pair: images; download

The |rc_xxx| provides the time-stamped, rectified left and right images
over the GenICam interface (see :ref:`sect-provided-image-streams`:latex:`,
Section \ref{gigevision:sect-provided-image-streams}`). Live streams of the images are provided
with reduced quality in the :ref:`Web GUI<sect-web-gui>`:latex:`\:(Section \ref{webgui:sect-web-gui})`.

The :ref:`Web GUI<sect-web-gui>`:latex:`\:(Section \ref{webgui:sect-web-gui})`
also provides the opportunity to download a snapshot of the current scene as a .tar.gz file
as described in :ref:`sect-webgui-camera-snapshot`:latex:`\:(Section \ref{webgui:sect-webgui-camera-snapshot})`.


.. _sect-cam-params:

Parameters
----------

.. index::
   pair: parameters; camera
   single: gain factor
   single: exposure time
   pair: camera; Web GUI

The stereo-camera software module is called ``rc_stereocamera`` and is represented by the
*Camera* tab in the :ref:`Web GUI<sect-web-gui>`:latex:`\:(Section \ref{webgui:sect-web-gui})`.
The user can change the camera parameters there, or directly via the |rest-api|
(:ref:`sect-rest-api`:latex:`, Section \ref{rest_api:sect-rest-api}`) or GigE Vision
(:ref:`sect-genicam`:latex:`, Section \ref{gigevision:sect-genicam}`).

.. Note:: Camera parameters cannot be changed via the |webgui| or |rest-api| if |rc_xxx|
   is used via GigE Vision.

Parameter overview
^^^^^^^^^^^^^^^^^^

.. include:: _gen/nodes/params/rc_stereocamera.txt

Description of run-time parameters
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. figure:: images/webgui_camera.png
    :width: 100 %
    :align: center

    The |webgui|'s *Camera* tab


.. _expl-fps:

.. index::
   pair: parameters; camera
   pair: camera; frame rate
   see: fps; frame rate

``fps`` (*FPS*)
'''''''''''''''
   This value is the cameras' frame rate (fps, frames per second),
   which determines the upper frequency at which depth images
   can be computed. This is also the frequency at which the |rc_xxx|
   delivers images via GigE Vision. Reducing this frequency also
   reduces the network bandwidth required to transmit the images.

   Via the |restapi|, this parameter can be set as follows.

   .. code-block:: bash

      PUT http://<host>/api/v1/nodes/rc_stereocamera/parameters?fps=<value>

   .. only:: rc_visard

      The camera always runs with |cam-rate| to ensure proper working of
      internal modules such as visual odometry that need a constant frame rate.
      The user frame rate setting is implemented by excluding frames
      for stereo matching and transmission via GigE Vision to reduce
      bandwidth as shown in figure :numref:`fig-fps`.

      .. _fig-fps:
      .. figure:: images/fps.*
         :width: 100 %
         :align: center

         Images are internally always captured with |cam-rate|. The ``fps`` parameter
         determines how many of them are sent as camera images via GigE Vision.

.. _expl-exp-auto:

.. index::
   single: exposure; auto
   single: exposure; manual
   single: manual exposure
   single: auto exposure

``exp_auto`` (*Exposure Auto* or *Manual*)
''''''''''''''''''''''''''''''''''''''''''
   This value can be set to `true` for auto-exposure mode,
   or to `false` for manual exposure mode. In manual exposure mode, the
   chosen exposure time is kept, even if the images are overexposed or
   underexposed. In auto-exposure mode, the exposure time and gain factor
   is chosen automatically to correctly expose the image. The last
   automatically determined exposure and gain values are set into
   ``exp_value`` and ``gain_value`` when switching auto-exposure off.

   Via the |restapi|, this parameter can be set as follows.

   .. code-block:: bash

      PUT http://<host>/api/v1/nodes/rc_stereocamera/parameters?exp_auto=<value>

.. _expl-exp-auto-mode:

.. index::
   pair: exposure; auto
   single: auto exposure mode
   pair: auto exposure mode; AdaptiveOut1
   pair: auto exposure mode; Out1High
   pair: auto exposure mode; Normal

``exp_auto_mode`` (*Auto Exposure Mode*)
''''''''''''''''''''''''''''''''''''''''
   The auto exposure mode can be set to `Normal`, `Out1High` or `AdaptiveOut1`. These modes are
   relevant when the |rc_xxx| is used with an external light source or projector connected
   to the |rc_visard|'s GPIO Out1,
   which can be controlled by the optional IOControl module
   (:ref:`sect-iocontrol`:latex:`, Section \ref{iocontrol:sect-iocontrol}`).

   `Normal`: All images are considered for exposure control, except if the IOControl mode
   for GPIO Out1 is `ExposureAlternateActive`: then only images where GPIO Out1 is HIGH will be
   considered, since these images may be brighter in case GPIO Out1 is used to trigger an external light source.

   `Out1High`: This exposure mode adapts the exposure time using only images with GPIO Out1 HIGH. Images where GPIO Out1 is LOW are not
   considered at all, which means, that the exposure time does not change when only images with Out1 LOW are acquired.
   This mode is recommended for using the ``acquisition_mode`` ``SingleFrameOut1`` in the stereo matching module as described in
   :ref:`Stereo Matching Parameters<sect-disp-image-parameters>`:latex:`\:(Section \ref{stereo_matching:sect-disp-image-parameters})`
   and having an external projector connected to GPIO Out1, when changes in the brightness of the scene should only be considered when Out1 is HIGH.
   This is the case, for example, when a bright part of the robot moves through the field of view of the camera just before a detection is triggered,
   which should not affect the exposure time.

   `AdaptiveOut1`: This exposure mode uses all camera images and tracks the exposure difference between images
   with GPIO Out1 LOW and HIGH. While the IOControl mode for GPIO Out1 is LOW, the images are under-exposed by this exposure
   difference to avoid over-exposure for when GPIO Out1 triggers an external projector. The resulting exposure difference
   is given as Out1 Reduction below the live images. This mode is recommended for using the ``acquisition_mode``
   ``SingleFrameOut1`` in the stereo matching module as described in
   :ref:`Stereo Matching Parameters<sect-disp-image-parameters>`:latex:`\:(Section \ref{stereo_matching:sect-disp-image-parameters})`
   and having an external projector connected to GPIO Out1, when changes in the brightness of the scene should be considered at all times.
   This is the case, for example, in applications where the external lighting is changing.

   Via the |restapi|, this parameter can be set as follows.

   .. code-block:: bash

      PUT http://<host>/api/v1/nodes/rc_stereocamera/parameters?exp_auto_mode=<value>

.. _expl-exp-max:

.. index::
   single: auto exposure
   pair: maximum; exposure time
   single: gain factor
   single: motion blur
   single: image noise

``exp_max`` (*Max Exposure*)
''''''''''''''''''''''''''''
   This value is the maximal exposure time in auto-exposure
   mode in seconds. The actual
   exposure time is adjusted automatically so that the images are exposed
   correctly. If the maximum exposure time is reached, but the images are still
   underexposed, the |rc_xxx| stepwise increases the gain to increase the
   images' brightness. Limiting the exposure time is useful for avoiding
   or reducing motion blur during fast movements. However, higher gain
   introduces noise into the image. The best trade-off depends on the application.

   Via the |restapi|, this parameter can be set as follows.

   .. code-block:: bash

      PUT http://<host>/api/v1/nodes/rc_stereocamera/parameters?exp_max=<value>

.. _exp-auto-max-min-average:

``exp_auto_average_max`` (*Max Brightness*) and ``exp_auto_average_min`` (*Min Brightness*)
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
   The auto-exposure tries to set the exposure time and gain factor such that the
   average intensity (i.e. brightness) in the image or exposure region is between a
   maximum and a minimum. The maximum brightness will be used if there is no saturation, e.g.
   no over-exposure due to bright surfaces or reflections. In case of saturation,
   the exposure time and gain factor are reduced, but only down to the minimum
   brightness.

   The maximum brightness has precendence over the minimum brightness parameter.
   If the minimum brightness is larger than the maximum brightness, the auto-exposure
   always tries to make the average intensity equal to the maximum brightness.

   The current brightness is always shown in the status bar below the images.

   Via the |restapi|, this parameter can be set as follows.

   .. code-block:: bash

      PUT http://<host>/api/v1/nodes/rc_stereocamera/parameters?<exp_auto_average_max|exp_auto_average_min>=<value>

.. _expl-exp-region:

.. index::
   single: exposure region

``exp_offset_x``, ``exp_offset_y``, ``exp_width``, ``exp_height`` (*Exposure Region*)
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
   These values define a rectangular region in the left rectified image for
   limiting the area used for computing the auto exposure. The exposure time and
   gain factor of both images are chosen to optimally expose the defined region.
   This can lead to over- or underexposure of image parts outside the defined
   region. If either the width or height is 0, then the whole left and right
   images are considered by the auto exposure function. This is the default.

   The region is visualized in the |webgui| by a rectangle in the left
   rectified image. It can be defined using the sliders or by selecting
   it in the image after pressing the button ``Select Region in Image``.

   Via the |restapi|, this parameter can be set as follows.

   .. code-block:: bash

      PUT http://<host>/api/v1/nodes/rc_stereocamera/parameters?<exp_offset_x|exp_offset_y|exp_width|exp_height>=<value>

.. _expl-exp-value:

.. index::
   single: exposure time
   single: manual exposure

``exp_value`` (*Exposure*)
''''''''''''''''''''''''''
    This value is the exposure time in manual exposure mode in seconds. This exposure time is kept constant
    even if the images are underexposed.

    Via the |restapi|, this parameter can be set as follows.

    .. code-block:: bash

       PUT http://<host>/api/v1/nodes/rc_stereocamera/parameters?exp_value=<value>

.. _expl-gain-value:

.. index::
   single: gain factor

``gain_value`` (*Gain*)
'''''''''''''''''''''''
   This value is the gain factor in decibel that can be set in manual exposure mode. Higher gain factors
   reduce the required exposure time but introduce noise.

   Via the |restapi|, this parameter can be set as follows.

   .. code-block:: bash

      PUT http://<host>/api/v1/nodes/rc_stereocamera/parameters?gain_value=<value>

.. _expl-wb-auto:

.. index::
   single: white balance

``wb_auto`` (*White Balance Auto* or *Manual*)
''''''''''''''''''''''''''''''''''''''''''''''
   This value can be set to `true` for automatic white balancing or `false` for manually
   setting the ratio between the colors using ``wb_ratio_red`` and
   ``wb_ratio_blue``. The last automatically determined ratios are set into
   ``wb_ratio_red`` and ``wb_ratio_blue`` when switching automatic white balancing off.
   White balancing is without function for monochrome
   cameras and will not be displayed in the |webgui| in this case.

   Via the |restapi|, this parameter can be set as follows.

   .. code-block:: bash

      PUT http://<host>/api/v1/nodes/rc_stereocamera/parameters?wb_auto=<value>

.. _expl-wb-ratio:

.. index::
   single: white balance

``wb_ratio_blue`` and ``wb_ratio_red`` (*Blue | Green* and *Red | Green*)
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
   These values are used to set blue to green and red to green ratios
   for manual white balance. White balancing is without function for monochrome
   cameras and will not be displayed in the |webgui| in this case.

   Via the |restapi|, this parameter can be set as follows.

   .. code-block:: bash

      PUT http://<host>/api/v1/nodes/rc_stereocamera/parameters?<wb_ratio_blue|wb_ratio_red>=<value>

These parameters are also available over the GenICam interface with slightly different names and partly with different units
or data types (see :ref:`sect-genicam`:latex:`, Section \ref{gigevision:sect-genicam}`).


Status values
-------------

This module reports the following status values:

.. tabularcolumns:: |l|L|
.. csv-table:: The ``rc_stereocamera`` module's status values
   :header:  Name, Description

   "``out1_reduction``","Fraction of reduction (0.0 - 1.0) of brightness for images with GPIO Out1=LOW in exp_auto_mode=AdaptiveOut1 or exp_auto_mode=Out1High"
   "``baseline``","Stereo baseline :math:`t` in meters"
   "``brightness``","Current brightness of the image as value between 0 and 1"
   "``color``","0 for monochrome cameras, 1 for color cameras"
   "``exp``","Current exposure time in seconds. This value is shown below the image preview in the |webgui| as *Exposure (ms)*."
   "``focal``","Focal length factor normalized to an image width of 1"
   "``fps``","Current frame rate of the camera images in Hertz. This value is shown in the |webgui| below the image preview as *FPS (Hz)*."
   "``gain``","Current gain factor in decibel. This value is shown in the |webgui| below the image preview as *Gain (dB)*."
   "``height``","Height of the camera image in pixels"
   "``temp_left``","Temperature of the left camera sensor in degrees Celsius"
   "``temp_right``","Temperature of the right camera sensor in degrees Celsius"
   "``test``","0 for live images and 1 for test images"
   "``time``","Processing time for image grabbing in seconds"
   "``width``","Width of the camera image in pixels"

.. _sect-cam-services:

Services
--------

.. index::
   pair: parameters; services

The stereo camera module offers the following services for persisting and
restoring parameter settings.

``save_parameters``
^^^^^^^^^^^^^^^^^^^

   Saves the currently set parameters persistently to the |rcxxx|. That means,
   these values are applied even after reboot. The parameters are also
   persistent over firmware updates and rollbacks.

   .. toggle-header::
      :header: **Details**
         
      This service can be called as follows.

      .. code-block:: bash

         PUT http://<host>/api/v1/nodes/rc_stereocamera/services/save_parameters

      .. tabs::

         .. tab:: **Request**

            .. include:: _gen/nodes/services/rc_stereocamera_save_parameters_request.txt

         .. tab:: **Response**

            .. include:: _gen/nodes/services/rc_stereocamera_save_parameters_response.txt


``reset_defaults``
^^^^^^^^^^^^^^^^^^

   Restores and applies the default values for this module's parameters
   ("factory reset").

   .. toggle-header::
      :header: **Details**
         
      This service can be called as follows.

      .. code-block:: bash

         PUT http://<host>/api/v1/nodes/rc_stereocamera/services/reset_defaults

      .. tabs::

         .. tab:: **Request**

            .. include:: _gen/nodes/services/rc_stereocamera_reset_defaults_request.txt

         .. tab:: **Response**

            .. include:: _gen/nodes/services/rc_stereocamera_reset_defaults_response.txt
